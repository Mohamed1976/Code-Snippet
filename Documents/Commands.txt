#You can use the aspnet_regiis.exe tool with the provider encryption (–pe) command 
#option to encrypt sections of the Web.config file, as follows:

aspnet_regiis -pe "ConnectionStrings" -app "/MachineDPAPI" -prov "RsaProtectedConfigurationProvider"

#In this command, -pe indicates which configuration section to encrypt, -app indicates the virtual path 
#to the application that will be using the config file, and -prov is the name of the provider.

If you need to decrypt the configuration file, you can use the aspnet_regiis program that you used to encrypt the values. 
Use the -pd command rather than the -pe command, as follows:

aspnet_regiis -pd "ConnectionStrings" -app "/MachineDPAPI" -prov "RsaProtectedConfigurationProvider"

You do not need to specify the protected configuration provider because that is known from the Web.config file.

#Signing an assembly can be done both at the command line and by using Visual Studio.
#The first step you have to take is to generate a key pair. A key pair is usually a file with an .snk
#extension that contains your public/private key information.
#When using the developer command prompt, you can run the following command to
#generate a new key pair file:
#PATH=C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools
sn -k myKey.snk

#After signing an assembly, you can view the public key by using the Strong Name tool.
sn -Tp C:\MusicStorage.dll

#You can view the content of your GAC by running the following command from a developer command prompt:
gacutil -l

#Installing an assembly in the GAC can be done with the following command:
gacutil –i [assembly name]//for example, gacutil -i "C:\MusicStorage.dll"

#You can also remove an assembly from the GAC:
gacutil –u [assembly name] //for example without dll extension, gacutil -u MusicStorage

#You can start Performance Monitor(perfmon) tool in cmd
perfmon

#You can start the eventviewer  tool in cmd  
eventvwr.msc

#You can start the regedit tool in cmd
regedit

#You can start the Disk Management program in cmd
diskmgmt.msc

#To get a list of all environment variables enter the command:
set

#To send those variables to a text file enter the command 
set > filename.txt

#To view the PATH environment variable  
echo %PATH%

#Signing an assembly can be done both at the command line and by using Visual Studio.
#The first step you have to take is to generate a key pair. A key pair is usually a file with an .snk
#extension that contains your public/private key information. When using the developer command prompt, 
#you can run the following command to generate a new key pair file:
sn -k myKey.snk

#After signing an assembly, you can view the public key by using the Strong Name tool (Sn.exe) that’s installed with Visual Studio.
sn -Tp C:\Users\moham\source\MusicStorage.dll

#Create and sign an assembly with a strong name by using the Assembly Linker
al /out:MyAssembly.dll MyModule.netmodule /keyfile:sgKey.snk  




